/*
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE 
    FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION 
    WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Threading.Tasks;

namespace FyersAPI
{
    [DataContract]
    public class TradeResponse : ResponseBase
    {
        [DataMember(Name = "tradeBook")]
        public List<Tradebook> tradeBook { get; set; }
    }


    [DataContract]
    public class Tradebook
    {
        /// <summary>
        /// Gets or sets the client id
        /// </summary>
        [DataMember(Name = "clientId")]
        public string clientId { get; set; }
        /// <summary>
        /// The time when the trade occured in “DD-MM-YYYY hh:mm:ss” format in IST
        /// </summary>
        [DataMember(Name = "orderDateTime")]
        public string orderDateTime { get; set; }
        /// <summary>
        /// The order id for which the trade occurred
        /// </summary>
        [DataMember(Name = "orderNumber")]
        public string orderNumber { get; set; }
        /// <summary>
        /// The order number provided by the exchange
        /// </summary>
        [DataMember(Name = "exchangeOrderNo")]
        public string exchangeOrderNo { get; set; }
        /// <summary>
        /// The <see cref="Exchanges">exchange</see> in which order is placed.
        /// </summary>
        [DataMember(Name = "exchange")]
        public int exchange { get; set; }
        /// <summary>
        /// Gets or sets the order action. <see cref="OrderSide"/>
        /// </summary>
        [DataMember(Name = "side")]
        public int side { get; set; }
        /// <summary>
        /// The segment in which order is placed. <see cref="Segment"/>
        /// </summary>
        [DataMember(Name = "segment")]
        public int segment { get; set; }
        /// <summary>
        /// Gets or sets the <see cref="OrderType"/>
        /// </summary>
        [DataMember(Name = "orderType")]
        //public int orderType { get; set; }
        public string orderType { get; set; }
        /// <summary>
        /// Fytoken is a unique identifier for every symbol.
        /// </summary>
        [DataMember(Name = "fyToken")]
        public string fyToken { get; set; }
        /// <summary>
        /// The product in which the order was placed. <see cref="ProductTypes"/>
        /// </summary>
        [DataMember(Name = "productType")]
        public string productType { get; set; }
        /// <summary>
        /// The total traded qty
        /// </summary>
        [DataMember(Name = "tradedQty")]
        public int tradedQty { get; set; }
        /// <summary>
        /// The traded price
        /// </summary>
        [DataMember(Name = "tradePrice")]
        public double tradePrice { get; set; }
        /// <summary>
        /// The total traded value
        /// </summary>
        [DataMember(Name = "tradeValue")]
        public double tradeValue { get; set; }
        /// <summary>
        /// The trade number generated by the exchange
        /// </summary>
        [DataMember(Name = "tradeNumber")]
        public string tradeNumber { get; set; }
        /// <summary>
        /// The unique id to sort the trades
        /// </summary>
        [DataMember(Name = "id")]
        public string id { get; set; }
        /// <summary>
        /// Gets or sets the row
        /// </summary>
        [DataMember(Name = "row")]
        public int row { get; set; }
        /// <summary>
        /// Gets or sets the symbol. Eg: NSE:SBIN-EQ
        /// </summary>
        [DataMember(Name = "symbol")]
        public string symbol { get; set; }
        /// <summary>
        /// Gets or sets the transaction type
        /// </summary>
        [DataMember(Name = "transactionType")]
        public int transactionType { get; set; }
    }


}
